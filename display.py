from prettytable import PrettyTable
from math import ceil
from record_class import Record


class Display:
    """
    Класс, отвечающий за вывод информации в консоль

    Методы
    ------
    def clear()
        Имитирует очистку консоли
    def wait_message(message)
        Выводит уведомление пользователю и ждет любого ввода
    def manual()
        Выводит инструкцию со всеми командами программы
    def show_page(current_page, records)
        Печатает страницу
    def new_command_helper()
        Печатает справочную информацию для команды "new"
    def edit_command_helper()
        Печатает справочную информацию для команды "edit"
    def find_command_helper()
        Печатает справочную информацию для команды "find"
    def show_find_results(records: list[str])
        Печатает результаты поиска
    """
    @staticmethod
    def clear():
        """ Имитирует очистку консоли """

        print('\n' * 20)

    @staticmethod
    def wait_message(message):
        """
        Имитация всплывающего окна - уведомления. Выдаем сообщение и ждем реакции пользователя

        Параметры
        ---------
        message: string
            Выводимое сообщение
        """
        print(message)
        waiter = input()
        del waiter

    @staticmethod
    def manual():
        """ Очищает консоль, затем выводит справку об основных командах программы. """

        Display.clear()
        print(f'\n\t Список команд:\n'
              f'Для перехода на предыдущую страницу введите "prev"\n'  # Печатаем служебные строки
              f'Для перехода на следующую страницу введите "next"\n'
              f'Для перехода на страницу с номером N введите "page N"\n'
              f'Для добавления новой записи введите "new"\n'
              f'Для редактирования записи под номером N введите "edit N"\n'
              f'Для поиска записи по характеристикам введите "find"\n'
              f'Для остановки программы введите "exit"')
        Display.wait_message('/ Для продолжения работы нажмите "enter" /')

    @staticmethod
    def show_page(page_size: int, current_page: int, records: list[Record], ender: str = 'Введите команду:'):
        """
        Печать страницы справочника

        Параметры
        ---------
        page_size: int
            Размер страницы в количестве записей
        current_page: int
            Номер текущей страницы
        records: list[Record]
            Список записей для работы
        ender: str
            Строки, выводящиеся после основного содержания
        """
        Display.clear()
        number_of_pages = ceil(len(records) / page_size)  # Количество существующих страниц
        if current_page > number_of_pages:  # Если открыт слишком большой номер страницы
            print(f'Страницы №{current_page} не существует, вы были перемещены на последнюю страницу.')
            current_page = number_of_pages
        elif current_page <= 0:  # Если открыт отрицательный или нулевой номер страницы
            print(f'Страницы №{current_page} не существует, вы были перемещены на первую страницу.')
            current_page = 1

        # Создаем объект PrettyTable для табличного вывода. В параметре - список заголовков
        page = PrettyTable(['Запись №', 'Фамилия', 'Имя', 'Отчество', 'Организация', 'Рабочий телефон', 'Сотовый телефон'])
        print(f'\tСтраница №{current_page}/{number_of_pages}')  # Печатаем заголовок с номером страницы

        i = 0
        record_number = (current_page - 1) * page_size + 1     # Номер записи
        # Пока не вылезли за границы размера страницы и количества записей:
        while i < page_size and record_number <= len(records):
            # Формируем строку из номера записи и информации из Record
            row = [record_number] + records[record_number - 1].as_list()
            page.add_row(row)  # Добавляем строку в таблицу
            i += 1
            record_number += 1
        print(f'{page}\n'
              f'/ Для вывода справки о командах введите "manual" /\n'
              f'{ender}')

    @staticmethod
    def show_find_results(records: list[str]):
        """
        Печатает результаты поиска от команды find

        Параметры
        ---------
        records: list[str]
            Список строк для вывода, строка в формате слов через запятую
        """
        Display.clear()
        if len(records) > 0:
            results = PrettyTable(['Запись №', 'Фамилия', 'Имя', 'Отчество', 'Организация', 'Рабочий телефон', 'Сотовый телефон'])
            for item in records:
                results.add_row(item)
            print(f'/ Результаты поиска: /\n'
                  f'{results}')
        else:
            print(f'/  К сожалению, с такими параметрами ничего не нашлось /\n')
        Display.wait_message('Нажмите "enter", чтобы вернуться')

    @staticmethod
    def new_command_helper():
        """ Инструкция, выводящаяся при вводе команды "new" """
        print(f'Введите запись в формате:\n '
              f'"Фамилия, Имя, Отчество, Название организации, Рабочий телефон, Сотовый телефон" и нажмите "enter"\n'
              f'Например: "Попов, Петр, Петрович, Билайн, 22222, 89956956565"\n'
              f'*** Введите back для отмены операции ***')

    @staticmethod
    def edit_command_helper():
        """ Инструкция, выводящаяся при вводе команды "edit" """
        print(f'Введите новое значение для записи в формате:\n '
              f'"Фамилия, Имя, Отчество, Название организации, Рабочий телефон, Сотовый телефон" и нажмите "enter"\n'
              f'Например: "Попов, Петр, Петрович, Билайн, 22222, 89956956565"\n'
              f'*** Введите back для отмены операции ***')

    @staticmethod
    def find_command_helper():
        """ Инструкция, выводящаяся при вводе команды "find" """
        print(f'Для поиска по заданной характеристике введите название характеристики и ее значение через знак равно.\n'
              f'Вы можете перечислить несколько нужных характеристик и соответствующих им значений через запятую.\n'
              f'Например: "Фамилия=Тихонов, Имя=Андрей, Рабочий=22222"\n'
              f'Список характеристик: Фамилия, Имя, Отчество, Организация, Сотовый, Рабочий\n'
              f'Характеристики должны быть написаны в точности, как в списке выше.\n'
              f'*** Введите back для отмены операции ***')


